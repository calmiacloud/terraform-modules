
  # SG Admin updater

    resource "aws_iam_user_policy" "policy_sgadmin" {
      name = "${var.INPUT_PLATFORM}-${var.INPUT_STAGE}-policy-sgadmin"
      user = aws_iam_user.user_sgadmin.name
      policy = jsonencode({
        Version = "2012-10-17"
        Statement = [{
          Effect   = "Allow"
          Action   = "execute-api:Invoke"
          Resource = "arn:aws:execute-api:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:${aws_api_gateway_rest_api.apigw_sgadminupdate.id}/*/*/*"
        }]
      })
    }

    # Lambda updater
    resource "aws_iam_role" "role_sgadminupdate" {
      name = "${var.INPUT_PLATFORM}-${var.INPUT_STAGE}-role-sgadminupdate"
      assume_role_policy = jsonencode({
        Version = "2012-10-17"
        Statement = [{
          Effect = "Allow"
          Action = "sts:AssumeRole"
          Principal = { Service = "lambda.amazonaws.com" }
        }]
      })
    }

    resource "aws_iam_role_policy_attachment" "policyattach_executionrole_sgadminupdate" {
      role       = aws_iam_role.role_sgadminupdate.name
      policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    }

    resource "aws_lambda_permission" "lambdapermission_apigw_sgadminupdate" {
      action = "lambda:InvokeFunction"
      function_name = module.lambda_sgadminupdate.arn
      principal = "apigateway.amazonaws.com"
      source_arn = "${aws_api_gateway_rest_api.apigw_sgadminupdate.execution_arn}/*/*"
    }

    # Api invoker 
    resource "aws_api_gateway_rest_api" "apigw_sgadminupdate" {
      name = "${var.INPUT_PLATFORM}-${var.INPUT_STAGE}-apigw-sgadminupdate"
      endpoint_configuration {
        types = ["REGIONAL"]
      }
    }

    resource "aws_api_gateway_method" "apimethod_sgadminupdate" {
      rest_api_id = aws_api_gateway_rest_api.apigw_sgadminupdate.id
      resource_id = aws_api_gateway_rest_api.apigw_sgadminupdate.root_resource_id
      http_method = "POST"
      authorization = "AWS_IAM"
    }

    resource "aws_api_gateway_integration" "apiintegration_sgadminupdate" {
      rest_api_id = aws_api_gateway_rest_api.apigw_sgadminupdate.id
      resource_id = aws_api_gateway_rest_api.apigw_sgadminupdate.root_resource_id
      http_method = aws_api_gateway_method.apimethod_sgadminupdate.http_method
      integration_http_method = "POST"
      type = "AWS_PROXY"
      uri = module.lambda_sgadminupdate.invoke_arn
    }

    resource "aws_api_gateway_deployment" "apideploment_sgadminupdate" {
      depends_on = [aws_api_gateway_integration.apiintegration_sgadminupdate]
      rest_api_id = aws_api_gateway_rest_api.apigw_sgadminupdate.id
    }

    resource "aws_api_gateway_stage" "apistage_sgadminupdate" {
      stage_name = "v1"
      rest_api_id = aws_api_gateway_rest_api.apigw_sgadminupdate.id
      deployment_id = aws_api_gateway_deployment.apideploment_sgadminupdate.id
    }
